{
  "stats": {
    "suites": 6,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-25T06:09:45.449Z",
    "end": "2023-01-25T06:09:45.703Z",
    "duration": 254,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36481264-cb98-42d0-ac14-61a37c3a25aa",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d707b5a-01a9-4b73-b908-d91cb0cdd1f0",
          "title": "#Should give user list",
          "fullFile": "/home/kamal/Downloads/node-js-postgresql-crud-example-master/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get users",
              "fullTitle": "#Should give user list Get users",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.get('/api/tutorials')\n.end((err, response) =>{\n    expect(response.status).to.be.equal(200)\n    expect(response.body).to.have.all.keys('success', 'data')\n    done()\n})",
              "err": {},
              "uuid": "88c92243-087b-4e32-9f7a-794b24fc2032",
              "parentUUID": "2d707b5a-01a9-4b73-b908-d91cb0cdd1f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88c92243-087b-4e32-9f7a-794b24fc2032"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 81,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dc6b6994-9e8b-460a-a688-127c60066c26",
          "title": "#Should resend OTP with mobile number",
          "fullFile": "/home/kamal/Downloads/node-js-postgresql-crud-example-master/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Resend OTP",
              "fullTitle": "#Should resend OTP with mobile number Resend OTP",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.post('/api/tutorials/resendOtp/')\n.set('content-type', 'application/x-www-form-urlencoded')\n.send({mobile: '9876543211'})\n.end((err, response) =>{\n    expect(response.status).to.be.equal(200)\n    expect(response.body).to.have.all.keys('mobile', 'otp', 'message')\n    done()\n})",
              "err": {},
              "uuid": "dadbfc28-9049-41e9-95a7-c22f3549349e",
              "parentUUID": "dc6b6994-9e8b-460a-a688-127c60066c26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dadbfc28-9049-41e9-95a7-c22f3549349e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaff16b5-0a9b-4f93-84fa-2b6f512b3af0",
          "title": "#Should return error 500 if already registered",
          "fullFile": "/home/kamal/Downloads/node-js-postgresql-crud-example-master/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check For Exist mobile number",
              "fullTitle": "#Should return error 500 if already registered Check For Exist mobile number",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.post('/api/tutorials')\n.set('content-type', 'application/x-www-form-urlencoded')\n.send({mobile: '9876543211'})\n.end((err, response) =>{\n    expect(response.status).to.be.equal(500)\n    done()\n})",
              "err": {},
              "uuid": "bbf938e7-9964-442c-a502-79051513f782",
              "parentUUID": "eaff16b5-0a9b-4f93-84fa-2b6f512b3af0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbf938e7-9964-442c-a502-79051513f782"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b73cef9-03c9-4539-bcb0-268e0099c643",
          "title": "#Should not Login if user enter Invalid mobile and otp",
          "fullFile": "/home/kamal/Downloads/node-js-postgresql-crud-example-master/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Invalid Credential provided",
              "fullTitle": "#Should not Login if user enter Invalid mobile and otp Invalid Credential provided",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.post('/api/tutorials/verifyOtp/')\n.set('content-type', 'application/x-www-form-urlencoded')\n.send({mobile: '0987654910', otp: 196745})\n.end((err, response) =>{\n    expect(response.status).to.be.equal(500)\n    done()\n})",
              "err": {},
              "uuid": "876aff6f-a2bc-44e7-ae04-8de02d1cd3c4",
              "parentUUID": "2b73cef9-03c9-4539-bcb0-268e0099c643",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "876aff6f-a2bc-44e7-ae04-8de02d1cd3c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1068baa4-5728-4087-81ec-ca3aaad8e564",
          "title": "#Should Login if user enter valid mobile and otp",
          "fullFile": "/home/kamal/Downloads/node-js-postgresql-crud-example-master/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Valid Credential provided",
              "fullTitle": "#Should Login if user enter valid mobile and otp Valid Credential provided",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.post('/api/tutorials/verifyOtp/')\n.set('content-type', 'application/x-www-form-urlencoded')\n.send({mobile: '0987654910', otp: 849544})\n.end((err, response) =>{\n    expect(response.status).to.be.equal(200)\n    expect(response.body).to.have.all.keys('message', 'mobile')\n    done()\n})",
              "err": {},
              "uuid": "7151698c-4f81-4446-a3c3-58fdcdcf931c",
              "parentUUID": "1068baa4-5728-4087-81ec-ca3aaad8e564",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7151698c-4f81-4446-a3c3-58fdcdcf931c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "89b9acfc-977a-4ab7-ac61-067900a92eab",
          "title": "#Should user delete enter valid mobile number",
          "fullFile": "/home/kamal/Downloads/node-js-postgresql-crud-example-master/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User Delete",
              "fullTitle": "#Should user delete enter valid mobile number User Delete",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n.delete('/api/tutorials/:mobile')\n.set('content-type', 'application/x-www-form-urlencoded')\n.send(req)\n.end((err, response) =>{\n    expect(response.status).to.be.equal(200)\n    expect(response.body).to.have.all.keys('message')\n    done()\n})",
              "err": {},
              "uuid": "f0800ac5-fa40-4fb1-8295-ca2d032c4a6e",
              "parentUUID": "89b9acfc-977a-4ab7-ac61-067900a92eab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0800ac5-fa40-4fb1-8295-ca2d032c4a6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}